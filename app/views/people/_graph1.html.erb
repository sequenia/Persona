

<p>График1</p>
<%= @person.get_data_for_graph1%>

<link href="flotDescription.css" rel="stylesheet" type="text/css">
<!--[if lte IE 8]><script language="javascript" type="text/javascript" src="../../excanvas.min.js"></script><![endif]-->
<script language="javascript" type="text/javascript" src="jquery.js"></script>
<script language="javascript" type="text/javascript" src="jquery.flot.js"></script>
<script language="javascript" type="text/javascript" src="jquery.flot.navigate.js"></script>

<script type="text/javascript">
  var CoefConvRubyToJSDate = 1000;
  var SinusCalculateStep   = 1000000;
  var MaxDateStr = '2064-01-01';

  function genPointsToSinus(LeftEndPoint, RightEndPoint, Step, XCoeff, Offset, CoordZero)
  {
    var Points = [];
    for(var i = LeftEndPoint - CoordZero; i < RightEndPoint - CoordZero; i += Step)
    {
      Points.push([(i + CoordZero) * CoefConvRubyToJSDate, Math.sin(XCoeff * i - Offset)]);
    }
    return Points;
  }

  function genOtherPoints(BirthDate, MemoryDate1, MemoryDate2, EndPoint, Zero, T)
  {
    var CtrlPoints  = [];
    var MinusPoints = [];
    var PlusPoints  = [];
    var ZeroPoints  = [];
    var counter = 0;
    var IsPositive = new Boolean(true);
    MinusPoints.push([BirthDate * CoefConvRubyToJSDate,   0]);
    ZeroPoints.push( [(BirthDate + (Zero - BirthDate) / 2) * CoefConvRubyToJSDate,   0]);
    CtrlPoints.push([MemoryDate1 * CoefConvRubyToJSDate, 0]);
    CtrlPoints.push([MemoryDate2 * CoefConvRubyToJSDate, 0]);
    for(var i = Zero; i <= EndPoint; i += T / 2)
    {
      if(i != MemoryDate1 && i != MemoryDate2)
      {
        if(counter % 2 == 0)
        {
          if(IsPositive) PlusPoints.push([i * CoefConvRubyToJSDate, 0]);
          else MinusPoints.push([i * CoefConvRubyToJSDate, 0]);
          IsPositive = !IsPositive;
        }
        else
        {
          ZeroPoints.push([i * CoefConvRubyToJSDate,   0]);
        }
      }
      counter++;
    }
    var AllPoints = {
      "CtrlPoints"  : CtrlPoints,
      "MinusPoints" : MinusPoints,
      "PlusPoints"  : PlusPoints,
      "ZeroPoints"  : ZeroPoints
    }
    return AllPoints;
  }

  function graphInit(BirthDate, MemoryDate1, MemoryDate2, EndPoint)
  {
    var Graph = {};
    <!--За ноль координат принимаем найденный ноль,-->
    <!--так как главный период синусоиды начинается именно оттуда-->
    var Zero = MemoryDate1;
    var T    = MemoryDate2 - MemoryDate1;
    var XCoeff      = 2 * Math.PI / T;
    var GraphPoints = [];

    <!--Ищем 0, самый близкий к дате рождения-->
    <!--Чтобы провести до него 1 период синусоиды-->
    <!--Дальше синусоида пойдет в соответствии с опорными точками-->
    while(Zero - BirthDate > T)
    {
      Zero = Zero - T;
    }

    var PreXCoeff = 2 * Math.PI / (Zero - BirthDate);
    GraphPoints = GraphPoints.concat(
        genPointsToSinus(BirthDate, Zero, SinusCalculateStep, PreXCoeff, Math.PI, Zero),
        genPointsToSinus(Zero, EndPoint, SinusCalculateStep, XCoeff, Math.PI, Zero)
      );

    var OtherPoints = genOtherPoints(BirthDate, MemoryDate1, MemoryDate2, EndPoint, Zero, T);

    Graph["Sinus"] = {
          label: (new Date(MemoryDate1 * CoefConvRubyToJSDate)).toLocaleDateString() + ", " + (new Date(MemoryDate2 * CoefConvRubyToJSDate)).toLocaleDateString(),
          data: GraphPoints,
          lines: { show: true },
          points: { show: false }
        };
    Graph["CtrlPoints"] = { 
          data: OtherPoints["CtrlPoints"],
          lines: { show: false },
          points: { show: true },
          color: 3
        };
    Graph["Minus"] = { 
          data: OtherPoints["MinusPoints"],
          lines: { show: false },
          points: { show: true },
          color: 2
        };
    Graph["Plus"] = {      
          data: OtherPoints["PlusPoints"],
          lines: { show: false },
          points: { show: true },
          color: 1
        };
    Graph["Zero"] = {  
          data: OtherPoints["ZeroPoints"],
          lines: { show: false },
          points: { show: true },
          color: 4
        };

    return Graph;
  }

  function getDate(DateWithSign)
  {
    return DateWithSign[0];
  }

  function getSign(DateWithSign)
  {
    return DateWithSign[1];
  }

  $(function() {

    var dates = <%= @person.get_dates_with_signs%>;
    var maxDate = Number(new Date(MaxDateStr)) / 1000;
    var birthDate = getDate(dates[0]);

    if(dates.length < 3)
    {
      alert("Слишком мало дат");
    }
    else
    {       
          var datasets = {};
          for(var i = 1; i < dates.length - 1; i++)
          {
            for(var j = i + 1; j < dates.length; j++)
            {
              if(getSign(dates[i]) != getSign(dates[j]))
              {
                var Graph = graphInit(birthDate, getDate(dates[i]), getDate(dates[j]), maxDate);
                datasets[(new Date(getDate(dates[i]) * CoefConvRubyToJSDate)).toLocaleDateString() + 
                  ", " + (new Date(getDate(dates[j]) * CoefConvRubyToJSDate)).toLocaleDateString()] = 
                {
                  "Sinus" : Graph["Sinus"],
                  "Minus" : Graph["Minus"],
                  "Zero"  : Graph["Zero"],
                  "Plus"  : Graph["Plus"],
                  "CtrlPoints" : Graph["CtrlPoints"]
                }
              }
            }
          }

          var choiceContainer = $("#choices");
          $.each(datasets, function(key, val) 
          {
            choiceContainer.append("<br/><input type='checkbox' name='" + key +
              "' checked='checked' id='id" + key + "'></input>" +
              "<label for='id" + key + "'>"
              + key + "</label>");
          });    

          function plotAccordingToChoices() 
          {

            var data = [];

            choiceContainer.find("input:checked").each(function () 
            {
              var key = $(this).attr("name");
              if (key && datasets[key]) 
              {
                  data.push(datasets[key]["Sinus"]);
                  data.push(datasets[key]["Minus"]);
                  data.push(datasets[key]["Plus"]);
                  data.push(datasets[key]["Zero"]);
                  data.push(datasets[key]["CtrlPoints"]);
              }
            });

            var options = 
            {
                yaxis:
                {
                  show: true,
                  font: {size: 0},
                  panRange: [-1.5, 1.5],
                  zoomRange: [1, 1]
                },
                xaxis: 
                {
                  mode: "time",
                  timeformat: "%d/%m/%Y",
                  panRange: [birthDate * CoefConvRubyToJSDate, maxDate * CoefConvRubyToJSDate]
                },
                zoom: 
                {
                  interactive: true
                },
                pan: 
                {
                  interactive: true
                }
            };

            $.plot("#placeholder", data, options);
          }

          choiceContainer.find("input").click(plotAccordingToChoices);

          plotAccordingToChoices();
    }

  });

 </script>

<div id="content">

    <div class="demo-container">
      <div id="placeholder" class="demo-placeholder" style="float:left; width:950px;"></div>
      <p id="choices" style="float:right; width:200px;"></p>
    </div>

</div>